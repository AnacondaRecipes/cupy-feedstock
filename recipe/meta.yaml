{% set name = "cupy" %}
{% set version = "13.6.0" %}
{% set sha256 = "db699fddfde7806445908cf6454c6f4985e7a9563b40405ddf97845d808c5f12" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
    sha256: 3cba30ae3dd32b5d5c6536e710cb98015227cd4ba83c46b3f1825a7ae55b6667

build:
  number: 0
  skip: true  # [(not linux64 and not win64) or cuda_compiler_version in (undefined, "None")]
  script:
    # CuPy default detects CUDA from nvcc, but on Conda-Forge's dockers nvcc lives in a different place...
    - export NVCC=$(which nvcc)  # [linux and cuda_compiler_version == '11.0']
    - export CUDA_PATH=/usr/local/cuda  # [linux and cuda_compiler_version == '11.0']
    - echo "nvcc is $NVCC, CUDA path is $CUDA_PATH"  # [linux]
    # -=- taken from prior build.sh -=-
    - export NCCL_LIB_DIR="${PREFIX}/lib"  # [linux]
    - export NCCL_INCLUDE_DIR="${PREFIX}/include"  # [linux]
    # Add path to find libcuda.so.
    - export LDFLAGS="-L/usr/local/cuda/lib64/stubs ${LDFLAGS}"  # [linux]
    # -=- taken from prior build.sh -=-
    - {{ PYTHON }} -m pip install . --no-deps -vv
    # copy activate/deactivate scripts
    - mkdir -p "${PREFIX}/etc/conda/activate.d"  # [linux]
    - cp "${RECIPE_DIR}/scripts/activate.sh" "${PREFIX}/etc/conda/activate.d/cupy_activate.sh"  # [linux]
    - mkdir -p "${PREFIX}/etc/conda/deactivate.d"  # [linux]
    - cp "${RECIPE_DIR}/scripts/deactivate.sh" "${PREFIX}/etc/conda/deactivate.d/cupy_deactivate.sh"  # [linux]
    - mkdir "$%PREFIX%\etc\conda\activate.d"  # [win]
    - copy "%RECIPE_DIR%\scripts\activate.bat" "%PREFIX%\etc\conda\activate.d\cupy_activate.bat"  # [win]
    - if errorlevel 1 exit 1  # [win]
    - mkdir "%PREFIX%\etc\conda\deactivate.d"  # [win]
    - copy "%RECIPE_DIR%\scripts\deactivate.bat" "%PREFIX%\etc\conda\deactivate.d\cupy_deactivate.bat"  # [win]
    - if errorlevel 1 exit 1  # [win]
  missing_dso_whitelist:
    - "*/libcuda.*"

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - {{ compiler("cuda") }}
  host:
    - python
    - pip
    - setuptools >=77
    - cython >=3,<3.2
    - fastrlock >=0.5
    - cudnn
    - nccl  # [linux]
    - wheel
  run:
    - python
    - setuptools
    - fastrlock >=0.5
    - numpy >=1.22,<2.6
    - six >=1.9.0
    # - cudnn  <-- added via run_export
    # - nccl   <-- added via run_export
  run_constrained:
    - scipy >=1.7,<1.17
    - Cython >=3
    - optuna >=2.0

test:
  requires:
    - pytest
    - mock
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - {{ compiler("cuda") }}  # tests need nvcc
  #- scipy >=1.0,<1.1  <-- cause error
  source_files:
    - tests

about:
  home: https://cupy.dev/
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: CuPy is an implementation of a NumPy-compatible multi-dimensional array on CUDA.
  dev_url: https://github.com/cupy/cupy/
  doc_url: https://docs.cupy.dev/en/stable/

extra:
  recipe-maintainers:
    - jakirkham
    - leofang
    - kmaehashi
    - beam2d
    - asi1024
    - emcastillo
    - hvy
    - toslunar
